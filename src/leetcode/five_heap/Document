

    堆

    最高效获得当前数据集中最大或最小的元素
    是一种特别的二叉树

    分为最大堆 ： 堆中每一个节点的值 都大于等于 其孩子节点的值。所以最大堆的特性是 堆顶元素（根节点）是堆中的最大值。
       最小堆 ：堆中每一个节点的值 都小于等于 其孩子节点的值。所以最小堆的特性是 堆顶元素（根节点）是堆中的最小值。

    Java中初始化堆

    最大堆：PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());
    最小堆：PriorityQueue<Integer> minHeap = new PriorityQueue<>();

    初始化带值的堆：PriorityQueue<Integer> heapWithValues= new PriorityQueue<>(Arrays.asList(3,1,2));

    插入：minHeap.add(1);
    删除堆顶元素：minHeap.poll();
    获取堆顶元素：int a = minHeap.peek();
    长度：minHeap.size();


    堆排序指的是利用堆的数据结构对一组无序元素进行排序。
    将所有元素堆化成一个 最小堆 ；
    取出并删除堆顶元素，并将该堆顶元素放置在存储有序元素的数据集 T 中；
    此时，堆 会调整成新的 最小堆；
    重复 3 和 4 步骤，直到 堆 中没有元素；

    Top k 问题用相反的大小堆做
    top k 最大  --- 用k个元素的最小堆
    top k 最小  --- 用k个元素的最大堆






