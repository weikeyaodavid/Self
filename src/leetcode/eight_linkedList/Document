

    链表

    分为单链表和双链表

    public class SinglyListNode {
        int val;
        SinglyListNode next;
        SinglyListNode(int x) { val = x; }
    }

    链表优势  插入删除快  O(1)
    数组优势  快速实现随机读写

    常使用解决策略：双指针，快慢指针

    链表有很多逻辑题，画图找规律更直观

    在对链表进行操作时，一种常用的技巧是添加一个哑节点（dummy node），它的 next 指针指向链表的头节点。
    这样一来，我们就不需要对头节点进行特殊的判断了







