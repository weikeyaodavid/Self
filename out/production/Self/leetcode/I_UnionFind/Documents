

    初始模版

    class DSU {
        int [] parent;
初始化   public DSU(int N){
            parent = new int[N];
            for(int i = 0; i < N; i++)parent[i] = i;
        }

find    public int find(int x){
            if(parent[x] != x)parent[x] = find(parent[x]);
            return parent[x];
        }

union   public void union(int x, int y){
            parent[find(x)] = find(y);
        }
    }


    优化模版 --- 一般不需要

    class DSU {
        int [] parent;
        int[] rank;     //或者 int[] size

初始化   public DSU(int N){
            parent = new int[N];
            rank = new int[N];
            for(int i = 0; i < N; i++)parent[i] = i;
            Arrays.fill(rank, 1);
        }

find    public int find(int x){
            if(parent[x] != x)parent[x] = find(parent[x]);
            return parent[x];
        }

union   public void union(int x, int y){
                int a = find(x);
                int b = find(y);
                if (a != b) {
                    if (rank[a] > rank[b]) {
                        parent[b] = a;
                    } else if (rank[a] < rank[b]) {
                        parent[a] = b;
                    } else {
                        parent[b] = a;
                        rank[a]++;
                    }
                }
            }
     }






















